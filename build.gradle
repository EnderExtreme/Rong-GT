buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id 'com.matthewprenger.cursegradle' version '1.1.0'
}

apply plugin: 'net.minecraftforge.gradle.forge'

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

def mod_version = getVersionFromJava(file("src/main/java/com/rong/rt/RongTechVersion.java"))
version = "${config.minecraft.version}-${mod_version}"
group = "rongtech"
archivesBaseName = "rongtech"

minecraft {
    version = "${config.minecraft.version}-${config.forge.version}"
	mappings = "snapshot_20170928"
    runDir = "run"
    useDepAts = true
}

configurations {
    provided
    embedded
    compile.extendsFrom provided, embedded
}

repositories {
    maven { //JEI
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "tterrag maven"
        url = "http://maven.tterrag.com/"
    }
    maven {
        name = "ChickenBones maven"
        url = "http://chickenbones.net/maven/"
    }
    maven {
        name = "tehnut maven"
        url = "http://tehnut.info/maven/"
    }
    maven {
        name = "CraftTweaker Maven"
        url = "https://maven.blamejared.com/"
    }
}

String mcVersion = config.minecraft.version
String shortVersion = mcVersion.substring(0, mcVersion.lastIndexOf('.'))
String strippedVersion = shortVersion.replace(".", "") + "0"

dependencies {

    deobfCompile "codechicken:ChickenASM:${shortVersion}-${config.chickenasm.version}"
    deobfCompile "codechicken:CodeChickenLib:${config.minecraft.version}-${config.ccl.version}:deobf"
    deobfCompile "CraftTweaker2:CraftTweaker2-MC${strippedVersion}-Main:${config.crafttweaker.version}"
    deobfCompile "mezz.jei:jei_${config.minecraft.version}:${config.jei.version}:api"
    deobfCompile "mcjty.theoneprobe:TheOneProbe-${shortVersion}:${shortVersion}-${config.top.version}"

}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

compileJava {
    sourceCompatibility = "1.8"
    targetCompatibility = "1.8"
    options.encoding = "UTF-8"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", mod_version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':mod_version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
	
	// access transformer
	rename '(.+_at.cfg)', 'META-INF/$1'
}

jar {
	manifest {
	    attributes 'FMLAT': 'rongtech_at.cfg'
	}
}

task source(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task dev(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

artifacts {
    archives jar
	archives source
}

idea {
    module {
        inheritOutputDirs = true
    }
}

String getVersionFromJava(File file) {
    String major = "0"
    String minor = "0"
    String revision = "0"

    String prefix = "public static final int"
    file.eachLine { String s ->
        s = s.trim()
        if (s.startsWith(prefix)) {
            s = s.substring(prefix.length(), s.length() - 1)
            s = s.replace('=', ' ').replaceAll(" +", " ").trim()
            String[] pts = s.split(" ")

            if (pts[0] == "MAJOR") major = pts[pts.length - 1]
            else if (pts[0] == "MINOR") minor = pts[pts.length - 1]
            else if (pts[0] == "REVISION") revision = pts[pts.length - 1]
        }
    }

    def branchNameOrTag = System.getenv("CI_COMMIT_REF_NAME")
    if (branchNameOrTag != null && !branchNameOrTag.startsWith('v') && branchNameOrTag != "master") {
        return "$major.$minor.$revision-$branchNameOrTag"
    }

    return "$major.$minor.$revision"
}
